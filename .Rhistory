spread(Year, Sales)
big <- melt(big, id.vars= c('Category',))
big <- melt(big, id.vars= c('Category'))
big
big <- melt(big, id.vars= c('Category'))
big
big %>%
ggplot(aes(Category,Sales/100000, fill=Category, color=Category))+
geom_bar(stat = 'identity')
big
big
setwd("~/Desktop/R BootCamp")
big <- read_excel("Big.xlsx")
big
big %>%
ggplot(aes(x=Category)+
geom_bar(y=Sales)+
geom_bar(u=Profit)
setwd("~/Desktop/R BootCamp")
setwd("~/Desktop/R BootCamp")
big <- read_excel("Big.xlsx")
big %>%
mutate(Year=year(`Order Date`)) %>%
group_by(Year, Category,) %>%
summarise(Sales=sum(Sales), Profit=sum(Profit)) %>%
spread(Year, Sales)
big <- melt(big, id.vars= c('Category'))
big
big %>%
ggplot(aes(x=Category)+
geom_bar(y=Sales)+
geom_bar(y=Profit)
setwd("~/Desktop/R BootCamp")
big <- read_excel("Big.xlsx")
big %>%
mutate(Year=year(`Order Date`)) %>%
group_by(Year, Category,) %>%
summarise(Sales=sum(Sales), Profit=sum(Profit)) %>%
spread(Year, Sales)
big <- melt(big, id.vars= c('Category'))
big
big %>%
ggplot(aes(x=Category)+
geom_bar(aes(y=Sales))+
geom_bar(aes(y=Profit))
police
head(police,4)
help(package=dplyr)
ls(package:dplyr)
ls("package:dplyr")
library(dplyr)
ls("package:dplyr")
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
police
View(police)
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
rename(police, raw_id=raw_row_number)
library(tidyverse)
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
police
select(police, raw_id=raw_row_number, date, time)
select(police, raw_id=raw_row_number, date, time)
police
rename(police, raw_id=raw_row_number)
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
library(tidyverse)
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
police
str(police)
rename(police, raw_id=raw_row_number)
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
library(tidyverse)
police <- read_csv("https://github.com/nuitrcs/r-online-2020/raw/master/data/ev_police.csv",
col_types=c("beat"="c"))
police
View(police)
police[, 1]
as.data.frame(police)[, 1]
select(police, -raw_row_number, -subject_age)
select(police, subject_sex, subject_race, date)
select(police, raw_DriverRace:raw_ResultOfStop)
select(police, last_col())
select(police, last_col(0:3))
select(police, starts_with("raw"))
select(police, ends_with("issued"))
select(police, ends_with("ued"))
select(police, ends_with("ed"))
select(police, ends_with("ued"))
select(police, contains("vehicle"))
select(police, -contains("subject"))
select(police,-starts_with("raw"))
rename(police, raw_id=raw_row_number)
filter(police, location != 60201 & location != 60202)
select(police, date, time)
police %>% select(date, time)
police %>%
select(date, time)
police %>%
select(subject_sex, outcome) %>%
filter(subject_race == "white")
police %>%
filter(subject_race == "white") %>%
select(subject_sex, outcome)
# sort(table(police$subject_race)) becomes:
table(police$subject_race) %>% sort()
library(tidyverse)
police %>%
mutate(vehicle_age = 2017-vehicle_year) %>% # computing a new variable first
summarize(mean_vehicle_age = max(vehicle_age))
police %>%
mutate(vehicle_age = 2017-vehicle_year) %>% # computing a new variable first
summarize(mean_vehicle_age = mean(vehicle_age))
police %>%
mutate(vehicle_age = 2017-vehicle_year) %>% # computing a new variable first
summarize(mean_vehicle_age = mean(vehicle_age)) %>%
pull()
police %>%
mutate(vehicle_age = 2017-vehicle_year) %>% # computing a new variable first
summarize(mean_vehicle_age = mean(vehicle_age),
sd_vehicle_age = sd(vehicle_age),
min_date = min(date),
max_date = max(date))
police%>%
summarize(min_vyear=min(vehicle_year),
max_vyear=max(vehicle_year),
count=n())
police %>%
summarize(across(everything(), n_distinct))%>%
group_by(subject_race)
police %>%
group_by(outcome)
police %>%
mutate(vehicle_age = 2017-vehicle_year) %>%
group_by(subject_sex) %>%
summarize(mean_vehicle_age = mean(vehicle_age),
sd_vehicle_age = sd(vehicle_age))
police %>%
mutate(vehicle_age = 2017-vehicle_year) %>%
group_by(subject_sex, subject_race) %>%
summarize(mean_vehicle_age = mean(vehicle_age),
sd_vehicle_age = sd(vehicle_age))
police %>%
group_by(outcome) %>%
ungroup()
police %>%
count(subject_sex, subject_race)
knitr::opts_chunk$set(
eval=FALSE, warning=FALSE, error=FALSE, message=FALSE
)
library(dplyr)
library(readr)
# county level data
demo <- read_csv("https://raw.githubusercontent.com/nuitrcs/r-tidyverse/master/data/county_demographics.csv")
cases <- read_csv("https://raw.githubusercontent.com/nuitrcs/r-tidyverse/master/data/county_cases.csv")
deaths <- read_csv("https://raw.githubusercontent.com/nuitrcs/r-tidyverse/master/data/county_deaths.csv")
# state level data
state_stats <- read_csv("https://raw.githubusercontent.com/nuitrcs/r-tidyverse/master/data/state_covid.csv")
demo
cases
deaths
state_stats
View(demo)
# just printing, not saving...
bind_rows(delaware, hawaii)
filter(demo, fips == 1009)
filter(cases, countyFIPS == 1009)
filter(deaths, countyFIPS == 1009)
names(demo)
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
r <- seq(1:10)
r
r <- seq(1:10)
len(r)
r <- seq(1:10)
length(r)
r <- seq(1:10)
length(r)
r
r <- seq(1:10)
length(r)
r
r[1:3]
r <- seq(1:10)
length(r)
r
r[0:3]
r <- seq(1:10)
length(r)
r
r[0:2]
r <- seq(1:10)
length(r)
r
r[3:5]
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
str(world)
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
nepal %>%
ggplot(aes(x=Date_reported, y=Cumulative_deaths, color = Country))+
geom_line()+
labs(title = "COVID Data for Nepal (per WHO)", x = "Months", y = "Deaths")+
theme(panel.background = element_blank())+
transition_reveal(Date_reported)
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "United States of America")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
setwd()
getwd()
setwd(/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis")
getwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis")
getwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
getwd()
library(tidyverse)
data <- read_csv("students_complete.csv")
view(data)
data %>%
filter("grade"=="9th")
data %>%
filter("grade"="9th")
data %>%
filter(grade=="9th")
data %>%
filter( grade=="9th" )
str(data)
data <- read_csv("students_complete.csv", "reading_score"="numeric")
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", "reading_score"="numeric")
view(data)
str(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data %>%
filter( grade=="9th" )
data %>%
filter( grade=="9th", school_name =="Thomas High School" )
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data <- filter(data, grade=="9th", school_name =="Thomas High School" )
view(data)
data %>%
if (grade == "9th" & school_name = "Thomas High School") {
reading_score = "NaN"}
else
data$reading_score = data$reading_score
data %>%
if (grade == "9th" & school_name = "Thomas High School") {
reading_score = "NaN"}
else
data$reading_score = data$reading_score
data$reading_score
data %>%
if (grade == "9th" & school_name = "Thomas High School") {
reading_score = "NaN"}
else
data$reading_score
data <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_score = "NaN"}
else
data$reading_score
data <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_score = "NaN"}
else
data$reading_score
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_score = "NaN"}
else
data$reading_score
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_score = "NaN"}
else
data$reading_score
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data$reading_scores <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_score = "NaN"}
else
data$reading_score
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data$reading_scores <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_scores = "NaN"}
else
data$reading_score
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data$reading_scores <- if (data$grade == "9th" & data$school_name = "Thomas High School") {
data$reading_scores = "NaN"}
else
data$reading_scores = data$reading_score
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
view(data)
str(data)
data$reading_scores <- if (data$grade == "9th") & (data$school_name = "Thomas High School") {
data$reading_scores = "NaN"}
else
data$reading_scores = data$reading_score
view(data)
view(data)
data$reading_scores <- if (data$grade == "9th") & (data$school_name = "Thomas High School") {
data$reading_scores = "NaN"}
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = C("reading_score"="numeric")
data$reading_scores <- if (data$grade == "9th") & (data$school_name = "Thomas High School") {
data$reading_scores = "NaN"}
else
data$reading_scores = data$reading_score
view(data)
setwd("/Users/sonishrestha/Desktop/Data_Science/Github/School_District_Analysis.")
library(tidyverse)
data <- read_csv("students_complete.csv", colClasses = c("reading_score"="numeric")
data$reading_scores <- if (data$grade == "9th") & (data$school_name = "Thomas High School") {
data$reading_scores = "NaN"}
else
data$reading_scores = data$reading_score
view(data)
install.packages("coronavirus")
library(tidyverse)
library(gganimate)
library(gifski)
world <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv", col_types = c("Date_reported"="D"))
world <- filter(world, Country == "Nepal")
View(world)
world %>%
ggplot(aes(x=Date_reported))+
geom_line(aes (y= New_cases, color="New_cases"))+
geom_line(aes (y= New_deaths, color = "New_deaths"))+
labs(title = "COVID Date", x = "Date", y = "Count")+
transition_reveal(Date_reported)
min(world$New_deaths)
world %>%
group_by(WHO_region,Country) %>%
summarise(total_sales=sum(New_cases))
data
view(data)
mutate(New = reding_score + math_score)
mutate(New = reading_score + math_score)
data$New = data$reading_score + data$math_score
view(data)
